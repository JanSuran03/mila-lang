{
  "S": {
    "program": 1
  },
  "TOP-LEVEL-BLOCK": {
    "begin": 2,
    "const": 4,
    "function": 5,
    "procedure": 6,
    "var": 3
  },
  "TOP-LEVEL-BLOCK-OR-END": {
    "dot": 7,
    "semicolon": 8
  },
  "FUNCTION": {
    "function": 9
  },
  "FUNC-PROC-BODY": {
    "begin": 11,
    "const": 11,
    "forward": 10,
    "var": 11
  },
  "FUNCTION-BLOCKS&": {
    "begin": 12,
    "const": 14,
    "var": 13,
    "ε": 12
  },
  "PROCEDURE": {
    "procedure": 15
  },
  "FUNCALL": {
    "symbol": 16
  },
  "FUNCALL-ARGS": {
    "lparen": 17
  },
  "FUNCALL-ARGS-INNER": {
    "add": 19,
    "false": 19,
    "float": 19,
    "integer": 19,
    "lparen": 19,
    "rparen": 18,
    "string": 19,
    "sub": 19,
    "symbol": 19,
    "true": 19,
    "ε": 18
  },
  "FUNCALL-ARGS-INNER2": {
    "comma": 21,
    "rparen": 20,
    "ε": 20
  },
  "NUMBER-ARRAY-INDEX": {
    "integer": 22,
    "sub": 23
  },
  "ARRAY-DECL": {
    "array": 24
  },
  "TYPE-SPECIFIER": {
    "array": 25,
    "float-TYPE": 26,
    "integer-TYPE": 26,
    "string-TYPE": 26
  },
  "TYPE-LITERAL": {
    "float-TYPE": 28,
    "integer-TYPE": 27,
    "string-TYPE": 29
  },
  "ARGLIST": {
    "lparen": 30
  },
  "ARGLIST-INNER": {
    "rparen": 31,
    "symbol": 32,
    "ε": 31
  },
  "ARGLIST-INNER2": {
    "rparen": 33,
    "semicolon": 34,
    "ε": 33
  },
  "ARG-DECL": {
    "symbol": 35
  },
  "CONST-BLOCK": {
    "const": 36
  },
  "CONST-DECL": {
    "symbol": 37
  },
  "CONST-DECLS&": {
    "begin": 38,
    "const": 38,
    "function": 38,
    "procedure": 38,
    "symbol": 39,
    "var": 38,
    "ε": 38
  },
  "VAR-BLOCK": {
    "var": 40
  },
  "VAR-DECL": {
    "symbol": 41
  },
  "VAR-NAMES&": {
    "colon": 42,
    "comma": 43,
    "ε": 42
  },
  "VAR-DECLS&": {
    "begin": 44,
    "const": 44,
    "function": 44,
    "procedure": 44,
    "symbol": 45,
    "var": 44,
    "ε": 44
  },
  "INDEX-OP": {
    "symbol": 46
  },
  "INDEX-OP-INNER": {
    "lbracket": 47
  },
  "EXPR": {
    "add": 48,
    "false": 48,
    "float": 48,
    "integer": 48,
    "lparen": 48,
    "string": 48,
    "sub": 48,
    "symbol": 48,
    "true": 48
  },
  "EXPR-OR": {
    "add": 49,
    "false": 49,
    "float": 49,
    "integer": 49,
    "lparen": 49,
    "string": 49,
    "sub": 49,
    "symbol": 49,
    "true": 49
  },
  "EXPR-OR'": {
    "comma": 50,
    "do": 50,
    "downto": 50,
    "else": 50,
    "end": 50,
    "or": 51,
    "rbracket": 50,
    "rparen": 50,
    "semicolon": 50,
    "then": 50,
    "to": 50,
    "ε": 50
  },
  "EXPR-AND": {
    "add": 52,
    "false": 52,
    "float": 52,
    "integer": 52,
    "lparen": 52,
    "string": 52,
    "sub": 52,
    "symbol": 52,
    "true": 52
  },
  "EXPR-AND'": {
    "and": 54,
    "comma": 53,
    "do": 53,
    "downto": 53,
    "else": 53,
    "end": 53,
    "or": 53,
    "rbracket": 53,
    "rparen": 53,
    "semicolon": 53,
    "then": 53,
    "to": 53,
    "ε": 53
  },
  "EXPR-EQ-NE": {
    "add": 55,
    "false": 55,
    "float": 55,
    "integer": 55,
    "lparen": 55,
    "string": 55,
    "sub": 55,
    "symbol": 55,
    "true": 55
  },
  "EXPR-EQ-NE'": {
    "and": 56,
    "comma": 56,
    "do": 56,
    "downto": 56,
    "else": 56,
    "end": 56,
    "eq": 57,
    "ne": 58,
    "or": 56,
    "rbracket": 56,
    "rparen": 56,
    "semicolon": 56,
    "then": 56,
    "to": 56,
    "ε": 56
  },
  "EXPR-CMP": {
    "add": 59,
    "false": 59,
    "float": 59,
    "integer": 59,
    "lparen": 59,
    "string": 59,
    "sub": 59,
    "symbol": 59,
    "true": 59
  },
  "EXPR-CMP'": {
    "and": 60,
    "comma": 60,
    "do": 60,
    "downto": 60,
    "else": 60,
    "end": 60,
    "eq": 60,
    "ge": 64,
    "gt": 63,
    "le": 62,
    "lt": 61,
    "ne": 60,
    "or": 60,
    "rbracket": 60,
    "rparen": 60,
    "semicolon": 60,
    "then": 60,
    "to": 60,
    "ε": 60
  },
  "EXPR-ADD": {
    "add": 65,
    "false": 65,
    "float": 65,
    "integer": 65,
    "lparen": 65,
    "string": 65,
    "sub": 65,
    "symbol": 65,
    "true": 65
  },
  "EXPR-ADD'": {
    "add": 67,
    "and": 66,
    "comma": 66,
    "do": 66,
    "downto": 66,
    "else": 66,
    "end": 66,
    "eq": 66,
    "ge": 66,
    "gt": 66,
    "le": 66,
    "lt": 66,
    "ne": 66,
    "or": 66,
    "rbracket": 66,
    "rparen": 66,
    "semicolon": 66,
    "sub": 68,
    "then": 66,
    "to": 66,
    "ε": 66
  },
  "EXPR-MUL": {
    "add": 69,
    "false": 69,
    "float": 69,
    "integer": 69,
    "lparen": 69,
    "string": 69,
    "sub": 69,
    "symbol": 69,
    "true": 69
  },
  "EXPR-MUL'": {
    "add": 70,
    "and": 70,
    "comma": 70,
    "div": 72,
    "do": 70,
    "downto": 70,
    "else": 70,
    "end": 70,
    "eq": 70,
    "ge": 70,
    "gt": 70,
    "le": 70,
    "lt": 70,
    "mod": 73,
    "mul": 71,
    "ne": 70,
    "or": 70,
    "rbracket": 70,
    "rparen": 70,
    "semicolon": 70,
    "sub": 70,
    "then": 70,
    "to": 70,
    "ε": 70
  },
  "EXPR-UNARY": {
    "add": 75,
    "false": 74,
    "float": 74,
    "integer": 74,
    "lparen": 74,
    "string": 74,
    "sub": 76,
    "symbol": 74,
    "true": 74
  },
  "EXPR-L0": {
    "false": 77,
    "float": 77,
    "integer": 77,
    "lparen": 78,
    "string": 77,
    "symbol": 79,
    "true": 77
  },
  "EXPR-SYM'": {
    "add": 80,
    "and": 80,
    "comma": 80,
    "div": 80,
    "do": 80,
    "downto": 80,
    "else": 80,
    "end": 80,
    "eq": 80,
    "ge": 80,
    "gt": 80,
    "lbracket": 81,
    "le": 80,
    "lparen": 82,
    "lt": 80,
    "mod": 80,
    "mul": 80,
    "ne": 80,
    "or": 80,
    "rbracket": 80,
    "rparen": 80,
    "semicolon": 80,
    "sub": 80,
    "then": 80,
    "to": 80,
    "ε": 80
  },
  "LITERAL": {
    "false": 87,
    "float": 85,
    "integer": 84,
    "string": 83,
    "true": 86
  },
  "FOR-LOOP": {
    "for": 88
  },
  "FOR-LOOP-TAIL": {
    "downto": 90,
    "to": 89
  },
  "WHILE-LOOP": {
    "while": 91
  },
  "ASSIGNMENT": {
    "symbol": 92
  },
  "ASSIGNMENT-RST": {
    "assign": 93,
    "lbracket": 94
  },
  "IF-ELSE-BLOCK": {
    "if": 95
  },
  "ELSE-BRANCH&": {
    "else": 97,
    "end": 96,
    "semicolon": 96,
    "ε": 96
  },
  "PROCEDURAL-BLOCK": {
    "begin": 102,
    "break": 104,
    "continue": 105,
    "exit": 103,
    "for": 98,
    "if": 100,
    "symbol": 101,
    "while": 99
  },
  "FUNCALL-OR-ASSIGNMENT": {
    "symbol": 106
  },
  "FUNCALL-OR-ASSIGNMENT-RST": {
    "assign": 107,
    "lbracket": 107,
    "lparen": 108
  },
  "BEGIN-END-BLOCK": {
    "begin": 109
  },
  "BEGIN-END-BLOCK-RST": {
    "end": 110,
    "semicolon": 111,
    "ε": 110
  },
  "BEGIN-END-BLOCK-REC": {
    "begin": 113,
    "break": 113,
    "continue": 113,
    "end": 112,
    "exit": 113,
    "for": 113,
    "if": 113,
    "symbol": 113,
    "while": 113,
    "ε": 112
  }
}