{
  "S": {
    "program": 1
  },
  "TOP-LEVEL-BLOCK": {
    "begin": 2,
    "const": 4,
    "function": 5,
    "procedure": 6,
    "var": 3
  },
  "TOP-LEVEL-BLOCK-OR-END": {
    "dot": 7,
    "semicolon": 8
  },
  "FUNCTION": {
    "function": 9
  },
  "FUNC-PROC-BODY": {
    "begin": 11,
    "const": 11,
    "forward": 10,
    "var": 11
  },
  "FUNCTION-BLOCKS&": {
    "begin": 12,
    "const": 14,
    "var": 13,
    "ε": 12
  },
  "PROCEDURE": {
    "procedure": 15
  },
  "FUNCALL": {
    "symbol": 16
  },
  "FUNCALL-ARGS": {
    "lparen": 17
  },
  "FUNCALL-ARGS-INNER": {
    "add": 19,
    "lparen": 19,
    "number": 19,
    "rparen": 18,
    "string": 19,
    "sub": 19,
    "symbol": 19,
    "ε": 18
  },
  "FUNCALL-ARGS-INNER2": {
    "comma": 21,
    "rparen": 20,
    "ε": 20
  },
  "NUMBER-ARRAY-INDEX": {
    "number": 22,
    "sub": 23
  },
  "ARRAY-DECL": {
    "array": 24
  },
  "TYPE-SPECIFIER": {
    "array": 25,
    "symbol": 26
  },
  "ARGLIST": {
    "lparen": 27
  },
  "ARGLIST-INNER": {
    "rparen": 28,
    "symbol": 29,
    "ε": 28
  },
  "ARGLIST-INNER2": {
    "rparen": 30,
    "semicolon": 31,
    "ε": 30
  },
  "ARG-DECL": {
    "symbol": 32
  },
  "CONST-BLOCK": {
    "const": 33
  },
  "CONST-DECL": {
    "symbol": 34
  },
  "CONST-DECLS&": {
    "begin": 35,
    "const": 35,
    "function": 35,
    "procedure": 35,
    "symbol": 36,
    "var": 35,
    "ε": 35
  },
  "VAR-BLOCK": {
    "var": 37
  },
  "VAR-DECL": {
    "symbol": 38
  },
  "VAR-NAMES&": {
    "colon": 39,
    "comma": 40,
    "ε": 39
  },
  "VAR-DECLS&": {
    "begin": 41,
    "const": 41,
    "function": 41,
    "procedure": 41,
    "symbol": 42,
    "var": 41,
    "ε": 41
  },
  "INDEX-OP": {
    "symbol": 43
  },
  "INDEX-OP-INNER": {
    "lbracket": 44
  },
  "EXPR": {
    "add": 45,
    "lparen": 45,
    "number": 45,
    "string": 45,
    "sub": 45,
    "symbol": 45
  },
  "EXPR-OR": {
    "add": 46,
    "lparen": 46,
    "number": 46,
    "string": 46,
    "sub": 46,
    "symbol": 46
  },
  "EXPR-OR'": {
    "comma": 47,
    "do": 47,
    "downto": 47,
    "else": 47,
    "end": 47,
    "or": 48,
    "rbracket": 47,
    "rparen": 47,
    "semicolon": 47,
    "then": 47,
    "to": 47,
    "ε": 47
  },
  "EXPR-AND": {
    "add": 49,
    "lparen": 49,
    "number": 49,
    "string": 49,
    "sub": 49,
    "symbol": 49
  },
  "EXPR-AND'": {
    "and": 51,
    "comma": 50,
    "do": 50,
    "downto": 50,
    "else": 50,
    "end": 50,
    "or": 50,
    "rbracket": 50,
    "rparen": 50,
    "semicolon": 50,
    "then": 50,
    "to": 50,
    "ε": 50
  },
  "EXPR-EQ-NE": {
    "add": 52,
    "lparen": 52,
    "number": 52,
    "string": 52,
    "sub": 52,
    "symbol": 52
  },
  "EXPR-EQ-NE'": {
    "and": 53,
    "comma": 53,
    "do": 53,
    "downto": 53,
    "else": 53,
    "end": 53,
    "eq": 54,
    "ne": 55,
    "or": 53,
    "rbracket": 53,
    "rparen": 53,
    "semicolon": 53,
    "then": 53,
    "to": 53,
    "ε": 53
  },
  "EXPR-CMP": {
    "add": 56,
    "lparen": 56,
    "number": 56,
    "string": 56,
    "sub": 56,
    "symbol": 56
  },
  "EXPR-CMP'": {
    "and": 57,
    "comma": 57,
    "do": 57,
    "downto": 57,
    "else": 57,
    "end": 57,
    "eq": 57,
    "ge": 61,
    "gt": 60,
    "le": 59,
    "lt": 58,
    "ne": 57,
    "or": 57,
    "rbracket": 57,
    "rparen": 57,
    "semicolon": 57,
    "then": 57,
    "to": 57,
    "ε": 57
  },
  "EXPR-ADD": {
    "add": 62,
    "lparen": 62,
    "number": 62,
    "string": 62,
    "sub": 62,
    "symbol": 62
  },
  "EXPR-ADD'": {
    "add": 64,
    "and": 63,
    "comma": 63,
    "do": 63,
    "downto": 63,
    "else": 63,
    "end": 63,
    "eq": 63,
    "ge": 63,
    "gt": 63,
    "le": 63,
    "lt": 63,
    "ne": 63,
    "or": 63,
    "rbracket": 63,
    "rparen": 63,
    "semicolon": 63,
    "sub": 65,
    "then": 63,
    "to": 63,
    "ε": 63
  },
  "EXPR-MUL": {
    "add": 66,
    "lparen": 66,
    "number": 66,
    "string": 66,
    "sub": 66,
    "symbol": 66
  },
  "EXPR-MUL'": {
    "add": 67,
    "and": 67,
    "comma": 67,
    "div": 69,
    "do": 67,
    "downto": 67,
    "else": 67,
    "end": 67,
    "eq": 67,
    "ge": 67,
    "gt": 67,
    "le": 67,
    "lt": 67,
    "mod": 70,
    "mul": 68,
    "ne": 67,
    "or": 67,
    "rbracket": 67,
    "rparen": 67,
    "semicolon": 67,
    "sub": 67,
    "then": 67,
    "to": 67,
    "ε": 67
  },
  "EXPR-UNARY": {
    "add": 72,
    "lparen": 71,
    "number": 71,
    "string": 71,
    "sub": 73,
    "symbol": 71
  },
  "EXPR-L0": {
    "lparen": 75,
    "number": 74,
    "string": 74,
    "symbol": 76
  },
  "EXPR-SYM'": {
    "add": 77,
    "and": 77,
    "comma": 77,
    "div": 77,
    "do": 77,
    "downto": 77,
    "else": 77,
    "end": 77,
    "eq": 77,
    "ge": 77,
    "gt": 77,
    "lbracket": 78,
    "le": 77,
    "lparen": 79,
    "lt": 77,
    "mod": 77,
    "mul": 77,
    "ne": 77,
    "or": 77,
    "rbracket": 77,
    "rparen": 77,
    "semicolon": 77,
    "sub": 77,
    "then": 77,
    "to": 77,
    "ε": 77
  },
  "LITERAL": {
    "number": 81,
    "string": 80
  },
  "FOR-LOOP": {
    "for": 82
  },
  "FOR-LOOP-TAIL": {
    "downto": 84,
    "to": 83
  },
  "WHILE-LOOP": {
    "while": 85
  },
  "ASSIGNMENT": {
    "symbol": 86
  },
  "ASSIGNMENT-RST": {
    "assign": 87,
    "lbracket": 88
  },
  "IF-ELSE-BLOCK": {
    "if": 89
  },
  "THEN-BRANCH&": {
    "else": 91,
    "end": 90,
    "semicolon": 90,
    "ε": 90
  },
  "PROCEDURAL-BLOCK": {
    "begin": 96,
    "exit": 97,
    "for": 92,
    "if": 94,
    "symbol": 95,
    "while": 93
  },
  "FUNCALL-OR-ASSIGNMENT": {
    "symbol": 98
  },
  "FUNCALL-OR-ASSIGNMENT-RST": {
    "assign": 99,
    "lbracket": 99,
    "lparen": 100
  },
  "BEGIN-END-BLOCK": {
    "begin": 101
  },
  "BEGIN-END-BLOCK-RST": {
    "end": 102,
    "semicolon": 103,
    "ε": 102
  },
  "BEGIN-END-BLOCK-REC": {
    "begin": 105,
    "end": 104,
    "exit": 105,
    "for": 105,
    "if": 105,
    "symbol": 105,
    "while": 105,
    "ε": 104
  }
}