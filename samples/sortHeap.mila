program sortHeap;

const N = 20;
var arr : array [0 .. 20] of integer;
var size : integer;

procedure heapBubbleDown(i : integer);
    var child: integer;
begin
    while 2 * i <= size do begin
        child := 2 * i;
        if (child < size and arr[child + 1] < arr[child]) then
            inc(child);
        if (arr[child] < arr[i]) then begin
            swap(arr[i], arr[child]);
            i := child
        end
        else
            break;
    end;
end;

procedure heapBuild();
    var i: integer;
begin
    for i := N / 2 downto 0 do
        heapBubbleDown(i);
end;

function heapExtractMin() : integer;
begin
    heapExtractMin := arr[1];
    arr[1] := arr[size];
    dec(size);
    heapBubbleDown(1);
end;

var i, min : integer;

begin
    size := N;

    for i := 1 to N + 1 do
        readln(arr[i]);

    heapBuild();

    while size > 0 do begin
        writeln(heapExtractMin());
    end;
end.
